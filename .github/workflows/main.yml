name: Nexus Mining

on:
  workflow_dispatch:

jobs:
  mining:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hours maximum

    steps:
      - name: Initial Setup
        id: setup
        run: |
          # Create timestamp for logging
          TIMESTAMP=$(date -u '+%Y%m%d_%H%M%S')
          echo "timestamp=$TIMESTAMP" >> $GITHUB_ENV
          
          # Create simple log file
          LOG_FILE="nexus_mining_${{ github.run_id }}.log"
          echo "log_file=$LOG_FILE" >> $GITHUB_ENV
          
          # Log initial information
          {
            echo "=== Nexus Mining Workflow ==="
            echo "Started at: $(date -u '+%Y-%m-%d %H:%M:%S')"
            echo "Workflow ID: ${{ github.run_id }}"
            echo "User: ${{ github.actor }}"
            echo "Runner: ${{ runner.os }}"
            echo "=========================="
          } > "$HOME/$LOG_FILE"
        shell: bash

      - name: System Optimization
        id: optimize
        run: |
          {
            echo "=== System Optimization Started ==="
            
            # Stop non-essential services
            for service in snapd unattended-upgrades apache2 mysql docker; do
              sudo systemctl stop $service 2>/dev/null || true
            done
            
            # CPU Optimization if available
            if [ -d "/sys/devices/system/cpu/cpu0/cpufreq" ]; then
              for cpu in /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor; do
                echo "performance" | sudo tee "$cpu" 2>/dev/null || true
              done
            fi
            
            # Basic system tuning
            sudo sysctl -w vm.swappiness=10 2>/dev/null || true
            sudo sysctl -w vm.dirty_ratio=60 2>/dev/null || true
            
            echo "System optimization completed at $(date -u)"
          } >> "$HOME/${{ env.log_file }}"
        shell: bash

      - name: Install Dependencies
        id: dependencies
        run: |
          {
            echo "=== Installing Dependencies ==="
            
            # Update package lists
            sudo apt-get update
            
            # Install required packages
            PACKAGES=(expect curl htop sysstat numactl net-tools)
            for pkg in "${PACKAGES[@]}"; do
              sudo apt-get install -y "$pkg" || echo "Failed to install $pkg"
            done
            
            echo "Dependencies installed at $(date -u)"
          } >> "$HOME/${{ env.log_file }}"
        shell: bash

      - name: Create Monitor Script
        id: monitor
        run: |
          # Create monitoring script
          cat << 'EOF' > "$HOME/monitor.sh"
          #!/bin/bash
          LOG_FILE="$1"
          
          while true; do
            {
              echo "=== System Status at $(date -u) ==="
              echo "--- CPU Usage ---"
              top -bn1 | head -n 10
              echo "--- Memory Usage ---"
              free -h
              echo "--- Node Process ---"
              ps aux | grep nexus-network
              echo "===================="
            } >> "$LOG_FILE"
            sleep 300
          done
          EOF
          
          chmod +x "$HOME/monitor.sh"
        shell: bash

      - name: Run Nexus Mining
        id: mining
        run: |
          {
            echo "=== Starting Mining Operation ==="
            
            # Start monitoring
            "$HOME/monitor.sh" "$HOME/${{ env.log_file }}" &
            MONITOR_PID=$!
            
            # Download Nexus CLI
            for i in {1..5}; do
              echo "Downloading Nexus CLI (attempt $i)"
              if curl -sSL --retry 3 --retry-delay 10 https://cli.nexus.xyz/ | sh; then
                break
              fi
              if [ $i -eq 5 ]; then
                echo "Failed to download Nexus CLI"
                exit 1
              fi
              sleep 10
            done
            
            # Create expect script
            cat << 'EOFEXP' > "$HOME/node.exp"
            #!/usr/bin/expect
            set timeout -1
            spawn $env(HOME)/.nexus/bin/nexus-network start --node-id 36659912
            expect {
              "Do you agree to the Nexus Beta Terms of Use?" {
                send "Y\r"
                exp_continue
              }
              eof {
                exit 1
              }
            }
            interact
            EOFEXP
            
            chmod +x "$HOME/node.exp"
            
            # Run node with continuous session
            echo "Starting Nexus node..."
            sudo numactl --physcpubind=0-3 --membind=0 "$HOME/node.exp" &
            NODE_PID=$!
            
            # Set high priority
            sudo renice -n -20 -p $NODE_PID || true
            sudo chrt -f -p 99 $NODE_PID || true
            
            # Wait for duration (5h 55m)
            echo "Node started at $(date -u)"
            sleep 21300
            
            # Cleanup
            echo "Stopping processes..."
            kill $MONITOR_PID || true
            kill $NODE_PID || true
            pkill -f nexus-network || true
            
            echo "Mining operation completed at $(date -u)"
          } >> "$HOME/${{ env.log_file }}"
        shell: bash

      - name: Upload Log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nexus-mining-log-${{ github.run_id }}
          path: ~/nexus_mining_${{ github.run_id }}.log
          retention-days: 7
